from dt2_model import ObjectDetctor
from utils import mat_to_im

import numpy as np

HUMAN_CLASS_ID = 0

class TestDetector:

    model = ObjectDetctor()

    def test_bbox_5482(self):
        fn = "data/xl_visual00005482.mat"
        im = mat_to_im(fn)

        TestDetector.model.inference(im)
        bbox = TestDetector.model.get_bbox(HUMAN_CLASS_ID)

        expected_bbox = np.array([
        [ 299.70526 ,  113.787056,  453.3985  ,  458.88315 ],
        [1009.0916  ,   71.66565 , 1077.6259  ,  290.35965 ],
        [1267.3265  ,   60.035015, 1356.1509  ,  296.21637 ],
        [ 601.64557 ,   70.78347 ,  695.23846 ,  304.25552 ],
        [1221.6411  ,   69.04232 , 1288.8077  ,  265.61758 ],
        [1062.1945  ,   68.127174, 1139.4298  ,  300.12338 ],
        [1432.0565  ,   64.352135, 1504.9913  ,  254.88535 ],
        [ 951.0167  ,   80.85767 ,  990.11847 ,  141.5691  ],
        [ 719.655   ,   66.93814 ,  786.8663  ,  244.19398 ],
        [ 817.29224 ,   57.910614,  863.60345 ,  217.23117 ],
        [ 780.58295 ,   67.29196 ,  827.6809  ,  222.41048 ],
        [ 869.7249  ,   80.97062 ,  921.4198  ,  257.6617  ],
        [ 685.5622  ,   70.569214,  727.2945  ,  206.07542 ],
        [ 906.9623  ,   66.56249 ,  948.4081  ,  145.14609 ],
        [ 474.27783 ,   65.19369 ,  509.91943 ,  132.12917 ],
        [ 951.4626  ,   77.89045 ,  990.2171  ,  224.56694 ],
        [ 877.98486 ,   73.24368 ,  910.5689  ,  145.20499 ]])

        # allclose has a tiny tolerance value, see doc 
        assert np.allclose(bbox, expected_bbox)

    def test_bbox_6771(self):
        fn = "data/xl_visual00006771.mat"
        im = mat_to_im(fn)

        TestDetector.model.inference(im)
        bbox = TestDetector.model.get_bbox(HUMAN_CLASS_ID)

        expected_bbox = np.array([
        [ 831.3391  ,   51.53806 ,  912.1848  ,  307.3014  ],
        [1248.957   ,  156.20116 , 1338.4634  ,  316.2825  ],
        [ 892.8876  ,   66.22795 ,  961.06335 ,  294.8199  ],
        [ 982.2976  ,   59.321705, 1100.0607  ,  289.89267 ],
        [ 606.29663 ,   93.67411 ,  695.43976 ,  309.4882  ],
        [ 666.26074 ,   74.664986,  733.8223  ,  278.3912  ],
        [1149.5594  ,   49.99416 , 1235.5781  ,  307.16074 ],
        [ 775.5183  ,   63.36031 ,  817.9338  ,  257.0183  ],
        [ 518.35815 ,   65.44414 ,  570.9343  ,  250.49088 ],
        [ 751.89594 ,   67.32759 ,  782.54175 ,  160.19778 ],
        [ 388.7999  ,   72.74288 ,  447.51413 ,  167.84882 ],
        [ 787.305   ,   60.018864,  843.84265 ,  273.00507 ],
        [1365.2754  ,   63.61117 , 1416.613   ,  267.65033 ],
        [1278.9557  ,   67.12667 , 1326.2836  ,  166.21753 ],
        [ 570.6429  ,   92.712875,  629.92694 ,  246.21921 ],
        [1227.0945  ,   80.70932 , 1279.9744  ,  178.32    ],
        [ 696.96063 ,   60.69425 ,  749.97577 ,  266.98895 ],
        [1218.0952  ,   75.4005  , 1282.804   ,  238.19559 ],
        [ 970.24884 ,   60.525124, 1013.6093  ,  184.3337  ],
        [ 570.8764  ,   88.96774 ,  664.4648  ,  293.1985  ],
        [1330.0935  ,   63.555218, 1376.371   ,  260.11594 ],
        [1410.3864  ,   66.72164 , 1455.0851  ,  148.99216 ],
        [1411.5419  ,   63.547306, 1457.7648  ,  248.86987 ],
        [ 388.22495 ,   63.270668,  483.28012 ,  206.59999 ]])

        assert np.allclose(bbox, expected_bbox)

